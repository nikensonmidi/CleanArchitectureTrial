// <auto-generated />
using System;
using DodoBed.Manufacturing.SqlPersistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DodoBed.Manufacturing.SqlPersistence.Migrations
{
    [DbContext(typeof(DodoBedManufacturingContext))]
    [Migration("20210910215921_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ActivityBasedCost", b =>
                {
                    b.Property<int>("ActivityBasedCostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CostId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ActivityBasedCostId");

                    b.HasIndex("CostId");

                    b.ToTable("ActivityBasedCosts");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Address", b =>
                {
                    b.Property<long>("AddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ContactId")
                        .HasColumnType("bigint");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressId");

                    b.HasIndex("ContactId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Contact", b =>
                {
                    b.Property<long>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("SupplierId")
                        .HasColumnType("bigint");

                    b.HasKey("ContactId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Cost", b =>
                {
                    b.Property<long>("CostId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AverageUnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FreightCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CostId");

                    b.ToTable("Costs");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.DigitalAddress", b =>
                {
                    b.Property<int>("DigitalAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContactId")
                        .HasColumnType("bigint");

                    b.Property<int?>("DigitalAddressTypeId")
                        .HasColumnType("int");

                    b.HasKey("DigitalAddressId");

                    b.HasIndex("ContactId");

                    b.HasIndex("DigitalAddressTypeId");

                    b.ToTable("DigitalAddresses");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.DigitalAddressType", b =>
                {
                    b.Property<int>("DigitalAddressTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DigitalAddressTypeId");

                    b.ToTable("DigitalAddressTypes");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Dimension", b =>
                {
                    b.Property<int>("DimensionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("DimensionId");

                    b.ToTable("Dimensions");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateHired")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastDateOfEmployment")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturingShopId")
                        .HasColumnType("int");

                    b.Property<int?>("PositionEmployeePositionId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("ManufacturingShopId");

                    b.HasIndex("PositionEmployeePositionId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.EmployeePosition", b =>
                {
                    b.Property<int>("EmployeePositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeePositionId");

                    b.ToTable("EmployeePositions");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.MachineTool", b =>
                {
                    b.Property<int>("MachineToolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastMaintenanceDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("LocationStorageLocationID")
                        .HasColumnType("int");

                    b.Property<int>("MaintenanceFrequencyInDays")
                        .HasColumnType("int");

                    b.Property<int?>("SizeDimensionId")
                        .HasColumnType("int");

                    b.Property<long?>("ToolItemId")
                        .HasColumnType("bigint");

                    b.HasKey("MachineToolId");

                    b.HasIndex("LocationStorageLocationID");

                    b.HasIndex("SizeDimensionId");

                    b.HasIndex("ToolItemId");

                    b.ToTable("MachineTools");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturedProduct", b =>
                {
                    b.Property<int>("ManufacturedProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AverageAssembledTimeInSec")
                        .HasColumnType("float");

                    b.Property<double>("AverageDailyQuota")
                        .HasColumnType("float");

                    b.Property<int?>("DimensionId")
                        .HasColumnType("int");

                    b.Property<double>("HighestAssembledTimeInSec")
                        .HasColumnType("float");

                    b.Property<int>("HighestQuota")
                        .HasColumnType("int");

                    b.Property<double>("LowestAssembledTimeInSec")
                        .HasColumnType("float");

                    b.Property<int>("LowestQuota")
                        .HasColumnType("int");

                    b.Property<long?>("ProductItemId")
                        .HasColumnType("bigint");

                    b.HasKey("ManufacturedProductId");

                    b.HasIndex("DimensionId");

                    b.HasIndex("ProductItemId");

                    b.ToTable("ManufacturedProducts");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturedProductAssembly", b =>
                {
                    b.Property<long>("ManufacturedProductAssemblyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssemblyItemId")
                        .HasColumnType("bigint");

                    b.Property<int?>("ManufacturedProductId")
                        .HasColumnType("int");

                    b.Property<double>("QuantityNeeded")
                        .HasColumnType("float");

                    b.HasKey("ManufacturedProductAssemblyId");

                    b.HasIndex("AssemblyItemId");

                    b.HasIndex("ManufacturedProductId");

                    b.ToTable("ManufacturedProductAssemblies");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturedProductCreated", b =>
                {
                    b.Property<long>("ManufacturedProductCreatedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ManufacturedProductId")
                        .HasColumnType("int");

                    b.Property<long?>("ManufacturingShopProcessorActivityId")
                        .HasColumnType("bigint");

                    b.HasKey("ManufacturedProductCreatedId");

                    b.HasIndex("ManufacturedProductId");

                    b.HasIndex("ManufacturingShopProcessorActivityId");

                    b.ToTable("CreatedManufacturedProducts");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturedProductInventory", b =>
                {
                    b.Property<long>("ManufacturedProductInventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("CurrentQuantityOnHand")
                        .HasColumnType("float");

                    b.Property<double>("OrderPoint")
                        .HasColumnType("float");

                    b.Property<int?>("ProductManufacturedProductId")
                        .HasColumnType("int");

                    b.Property<double>("QuantityUsed")
                        .HasColumnType("float");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ManufacturedProductInventoryId");

                    b.HasIndex("ProductManufacturedProductId");

                    b.ToTable("ManufacturedProductInventories");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturedProductScheduled", b =>
                {
                    b.Property<long>("ManufacturedProductScheduledId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("InventoriedProductManufacturedProductInventoryId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ManufacturingShopScheduleId")
                        .HasColumnType("bigint");

                    b.HasKey("ManufacturedProductScheduledId");

                    b.HasIndex("InventoriedProductManufacturedProductInventoryId");

                    b.HasIndex("ManufacturingShopScheduleId");

                    b.ToTable("ManufacturedProductScheduled");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturingShop", b =>
                {
                    b.Property<int>("ManufacturingShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManufacturingShopId");

                    b.ToTable("ManufacturingShops");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopProcessor", b =>
                {
                    b.Property<int>("ManufacturingShopProcessorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturingShopId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcessingSequence")
                        .HasColumnType("int");

                    b.HasKey("ManufacturingShopProcessorId");

                    b.HasIndex("ManufacturingShopId");

                    b.ToTable("ManufacturingShopProcessors");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopProcessorActivity", b =>
                {
                    b.Property<long>("ManufacturingShopProcessorActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProcessorStateManufacturingShopProcessorStateId")
                        .HasColumnType("int");

                    b.HasKey("ManufacturingShopProcessorActivityId");

                    b.HasIndex("ProcessorStateManufacturingShopProcessorStateId");

                    b.ToTable("ManufacturingShopProcessorActivities");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopProcessorState", b =>
                {
                    b.Property<int>("ManufacturingShopProcessorStateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("StateBeginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ManufacturingShopProcessorStateId");

                    b.ToTable("ManufacturingShopProcessorStates");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopSchedule", b =>
                {
                    b.Property<long>("ManufacturingShopScheduleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ScheduleTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ManufacturingShopScheduleId");

                    b.ToTable("ManufacturingShopSchedules");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopScheduleLog", b =>
                {
                    b.Property<long>("ManufacturingShopScheduleLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ManufacturingShopProcessorActivityId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ManufacturingShopScheduleId")
                        .HasColumnType("bigint");

                    b.HasKey("ManufacturingShopScheduleLogId");

                    b.HasIndex("ManufacturingShopProcessorActivityId");

                    b.HasIndex("ManufacturingShopScheduleId");

                    b.ToTable("ManufacturingShopScheduleLogs");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Note", b =>
                {
                    b.Property<long>("NoteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorEmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturingShopProcessorId")
                        .HasColumnType("int");

                    b.Property<long?>("ProductionCapacityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NoteId");

                    b.HasIndex("AuthorEmployeeId");

                    b.HasIndex("ManufacturingShopProcessorId");

                    b.HasIndex("ProductionCapacityId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ObsoleteManufacturedProduct", b =>
                {
                    b.Property<int>("ObsoleteManufacturedProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ProductItemId")
                        .HasColumnType("bigint");

                    b.Property<int?>("StatusChangeByEmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StatusChangeDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ObsoleteManufacturedProductId");

                    b.HasIndex("ProductItemId");

                    b.HasIndex("StatusChangeByEmployeeId");

                    b.ToTable("ObsoleteManufacturedProducts");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Price", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BundlePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ListPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LowestRebatePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchasingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PriceId");

                    b.ToTable("Prices");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Product", b =>
                {
                    b.Property<long>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 9, 10, 17, 59, 20, 752, DateTimeKind.Local).AddTicks(7627));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InHouseName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 9, 10, 17, 59, 20, 765, DateTimeKind.Local).AddTicks(3734));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PorductPricePriceId")
                        .HasColumnType("int");

                    b.Property<long?>("ProductCostCostId")
                        .HasColumnType("bigint");

                    b.HasKey("ItemId");

                    b.HasIndex("PorductPricePriceId");

                    b.HasIndex("ProductCostCostId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ProductDesignDocument", b =>
                {
                    b.Property<long>("ProductDesignDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorEmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ManufacturedProductId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductDesignDocumentId");

                    b.HasIndex("AuthorEmployeeId");

                    b.HasIndex("ManufacturedProductId");

                    b.ToTable("ProductDesignDocuments");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ProductLocation", b =>
                {
                    b.Property<int>("ProductLocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("LocationStorageLocationID")
                        .HasColumnType("int");

                    b.Property<long?>("ProductItemId")
                        .HasColumnType("bigint");

                    b.Property<int?>("SizeDimensionId")
                        .HasColumnType("int");

                    b.HasKey("ProductLocationID");

                    b.HasIndex("LocationStorageLocationID");

                    b.HasIndex("ProductItemId");

                    b.HasIndex("SizeDimensionId");

                    b.ToTable("ProductLocations");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ProductManufacturingShop", b =>
                {
                    b.Property<long>("ProductManufacturingShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ManufacturedProductId")
                        .HasColumnType("int");

                    b.Property<int?>("ManufacturingShopId")
                        .HasColumnType("int");

                    b.HasKey("ProductManufacturingShopId");

                    b.HasIndex("ManufacturedProductId");

                    b.HasIndex("ManufacturingShopId");

                    b.ToTable("ProductManufacturingShops");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ProductionCapacity", b =>
                {
                    b.Property<long>("ProductionCapacityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("AmountProduced")
                        .HasColumnType("float");

                    b.Property<double>("AmountProjected")
                        .HasColumnType("float");

                    b.Property<int?>("ManufacturedProductId")
                        .HasColumnType("int");

                    b.Property<string>("Month")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("ProductionCapacityId");

                    b.HasIndex("ManufacturedProductId");

                    b.ToTable("ProductionCapacities");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.StorageLocation", b =>
                {
                    b.Property<int>("StorageLocationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AisleNumber")
                        .HasColumnType("int");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BuildingNumber")
                        .HasColumnType("int");

                    b.Property<int>("SectionNumber")
                        .HasColumnType("int");

                    b.Property<int>("ShelfNumber")
                        .HasColumnType("int");

                    b.HasKey("StorageLocationID");

                    b.ToTable("StorageLocation");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Supplier", b =>
                {
                    b.Property<long>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ProductItemId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ToolItemId")
                        .HasColumnType("bigint");

                    b.HasKey("SupplierId");

                    b.HasIndex("ProductItemId");

                    b.HasIndex("ToolItemId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Tool", b =>
                {
                    b.Property<long>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 9, 10, 17, 59, 20, 774, DateTimeKind.Local).AddTicks(3602));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(2021, 9, 10, 17, 59, 20, 774, DateTimeKind.Local).AddTicks(4778));

                    b.Property<string>("ManufacturerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ManufacturingShopProcessorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.HasIndex("ManufacturingShopProcessorId");

                    b.ToTable("Tools");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ActivityBasedCost", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Cost", null)
                        .WithMany("ActivityBasedCost")
                        .HasForeignKey("CostId");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Address", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Contact", null)
                        .WithMany("ContactAddresses")
                        .HasForeignKey("ContactId");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Contact", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Supplier", null)
                        .WithMany("Contacts")
                        .HasForeignKey("SupplierId");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.DigitalAddress", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Contact", null)
                        .WithMany("DigitalAddresses")
                        .HasForeignKey("ContactId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.DigitalAddressType", "DigitalAddressType")
                        .WithMany()
                        .HasForeignKey("DigitalAddressTypeId");

                    b.Navigation("DigitalAddressType");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Employee", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturingShop", null)
                        .WithMany("Employees")
                        .HasForeignKey("ManufacturingShopId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.EmployeePosition", "Position")
                        .WithMany()
                        .HasForeignKey("PositionEmployeePositionId");

                    b.Navigation("Position");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.MachineTool", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.StorageLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationStorageLocationID");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Dimension", "Size")
                        .WithMany()
                        .HasForeignKey("SizeDimensionId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Tool", "Tool")
                        .WithMany()
                        .HasForeignKey("ToolItemId");

                    b.Navigation("Location");

                    b.Navigation("Size");

                    b.Navigation("Tool");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturedProduct", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Dimension", "Dimension")
                        .WithMany()
                        .HasForeignKey("DimensionId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductItemId");

                    b.Navigation("Dimension");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturedProductAssembly", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Product", "Assembly")
                        .WithMany()
                        .HasForeignKey("AssemblyItemId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturedProduct", null)
                        .WithMany("ProductComponents")
                        .HasForeignKey("ManufacturedProductId");

                    b.Navigation("Assembly");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturedProductCreated", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturedProduct", "ManufacturedProduct")
                        .WithMany()
                        .HasForeignKey("ManufacturedProductId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopProcessorActivity", null)
                        .WithMany("CreatedProducts")
                        .HasForeignKey("ManufacturingShopProcessorActivityId");

                    b.Navigation("ManufacturedProduct");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturedProductInventory", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturedProduct", "Product")
                        .WithMany()
                        .HasForeignKey("ProductManufacturedProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturedProductScheduled", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturedProductInventory", "InventoriedProduct")
                        .WithMany()
                        .HasForeignKey("InventoriedProductManufacturedProductInventoryId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopSchedule", null)
                        .WithMany("ProductToBeBuilt")
                        .HasForeignKey("ManufacturingShopScheduleId");

                    b.Navigation("InventoriedProduct");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopProcessor", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturingShop", null)
                        .WithMany("Processors")
                        .HasForeignKey("ManufacturingShopId");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopProcessorActivity", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopProcessorState", "ProcessorState")
                        .WithMany()
                        .HasForeignKey("ProcessorStateManufacturingShopProcessorStateId");

                    b.Navigation("ProcessorState");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopScheduleLog", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopProcessorActivity", "ManufacturingShopProcessorActivity")
                        .WithMany()
                        .HasForeignKey("ManufacturingShopProcessorActivityId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopSchedule", "ManufacturingShopSchedule")
                        .WithMany()
                        .HasForeignKey("ManufacturingShopScheduleId");

                    b.Navigation("ManufacturingShopProcessorActivity");

                    b.Navigation("ManufacturingShopSchedule");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Note", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Employee", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorEmployeeId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopProcessor", null)
                        .WithMany("Instructions")
                        .HasForeignKey("ManufacturingShopProcessorId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ProductionCapacity", null)
                        .WithMany("Notes")
                        .HasForeignKey("ProductionCapacityId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ObsoleteManufacturedProduct", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductItemId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Employee", "StatusChangeBy")
                        .WithMany()
                        .HasForeignKey("StatusChangeByEmployeeId");

                    b.Navigation("Product");

                    b.Navigation("StatusChangeBy");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Product", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Price", "PorductPrice")
                        .WithMany()
                        .HasForeignKey("PorductPricePriceId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Cost", "ProductCost")
                        .WithMany()
                        .HasForeignKey("ProductCostCostId");

                    b.Navigation("PorductPrice");

                    b.Navigation("ProductCost");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ProductDesignDocument", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Employee", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorEmployeeId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturedProduct", null)
                        .WithMany("DesignDocuments")
                        .HasForeignKey("ManufacturedProductId");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ProductLocation", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.StorageLocation", "Location")
                        .WithMany()
                        .HasForeignKey("LocationStorageLocationID");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductItemId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Dimension", "Size")
                        .WithMany()
                        .HasForeignKey("SizeDimensionId");

                    b.Navigation("Location");

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ProductManufacturingShop", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturedProduct", null)
                        .WithMany("ProductShops")
                        .HasForeignKey("ManufacturedProductId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturingShop", "ManufacturingShop")
                        .WithMany()
                        .HasForeignKey("ManufacturingShopId");

                    b.Navigation("ManufacturingShop");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ProductionCapacity", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturedProduct", null)
                        .WithMany("ProductionCapacities")
                        .HasForeignKey("ManufacturedProductId");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Supplier", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Product", null)
                        .WithMany("Suppliers")
                        .HasForeignKey("ProductItemId");

                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.Tool", null)
                        .WithMany("Suppliers")
                        .HasForeignKey("ToolItemId");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Tool", b =>
                {
                    b.HasOne("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopProcessor", null)
                        .WithMany("Tools")
                        .HasForeignKey("ManufacturingShopProcessorId");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Contact", b =>
                {
                    b.Navigation("ContactAddresses");

                    b.Navigation("DigitalAddresses");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Cost", b =>
                {
                    b.Navigation("ActivityBasedCost");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturedProduct", b =>
                {
                    b.Navigation("DesignDocuments");

                    b.Navigation("ProductComponents");

                    b.Navigation("ProductionCapacities");

                    b.Navigation("ProductShops");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturingShop", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Processors");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopProcessor", b =>
                {
                    b.Navigation("Instructions");

                    b.Navigation("Tools");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopProcessorActivity", b =>
                {
                    b.Navigation("CreatedProducts");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ManufacturingShopSchedule", b =>
                {
                    b.Navigation("ProductToBeBuilt");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Product", b =>
                {
                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.ProductionCapacity", b =>
                {
                    b.Navigation("Notes");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Supplier", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("DodoBed.Manufacturing.Domain.Entities.Tool", b =>
                {
                    b.Navigation("Suppliers");
                });
#pragma warning restore 612, 618
        }
    }
}
